//1st 
#include <stdio.h>
#include <stdlib.h>
int main(){
    char mychar1='a';
    printf("Character: %c\n", mychar1);
    printf("Decimal ASCII Value: %d\n", mychar1);
    printf("Hexa decimal ASCII value: %X\n", mychar1);
    return 0;
}

2nd 
#include <stdio.h>
#include <stdlib.h>
int main(){
    char mychar1='a';
    char mychar2=97;
    char mychar3=0x61;
    printf("Character: %c\n", mychar1);
    printf("Decimal ASCII Value: %d\n", mychar1);
    printf("Hexa decimal ASCII value: %X\n", mychar1);
    printf("Character: %c\n", mychar2);
    printf("Decimal ASCII Value: %d\n", mychar2);
    printf("Hexa decimal ASCII value: %X\n", mychar2);
    printf("Character: %c\n", mychar3);
    printf("Decimal ASCII Value: %d\n", mychar3);
    printf("Hexa decimal ASCII value: %X\n", mychar3);
    return 0;
}

// //3 
#include <stdio.h>
#include <stdlib.h>
int main(){
    char mychar1='a';
    char mychar2=9;
    printf("Character: %c\n", mychar1);
    printf("Decimal ASCII Value: %d\n", mychar1);
    printf("Hexa decimal ASCII value: %X\n", mychar1);
    printf("Character: %c\n", mychar2);
    printf("Decimal ASCII Value: %d\n", mychar2);
    printf("Hexa decimal ASCII value: %X\n", mychar2);
    return 0;
}

//4
#include <stdio.h>
#include <stdlib.h>
int main(){
    int day, month, year;
    printf("Enter day, month & year: ");
    scanf("%d %d %d", &day, &month, &year);
    printf("Hexadecimal ASCII for day: 0x%X\n", day);
    printf("Hexadecimal ASCII for month: 0x%X\n", month);
    printf("Hexadecimal ASCII for year: 0x%X\n", year);
    return 0;
}

//5 
#include <stdio.h>
#include <stdlib.h>
int main(){
    char variable;
    printf("Enter Variable: ");
    scanf("%c", &variable);
    // printf("Char is: %c\n", variable);
    // printf("Decimal is: %d\n", variable);
    // printf("Hexa decimal is: %X\n", variable);
    int variable1=variable;
    printf("%d\n", variable1);
    if(variable1>=65 && variable1<=90){
        printf("Upper case letter");
    }
    else if(variable1>=97 && variable1){
        printf("Lower case letter");
    }
    else if(variable1>=48 && variable1<=57){
        printf("Digit");
    }
    else{
        printf("Other character");
    }
    return 0;
}

// or can solve this way 
#include <stdio.h>
#include <stdlib.h>
int main(){
    char var;
    printf("Enter charcater: ");
    scanf("%c", &var);
    if(var>='A' && var<='Z'){
        printf("Upper case");
    }
    else if(var>='a' && var<='z'){
        printf("Lower case");
    }
    else if(var>=0 && var<=9){
        printf("Digit");
    }
    else {
        printf("Other");
    }
    return 0;
}

/*Write a program that reads from the user 1 character representing a "1-digit" value in Hexadecimal Format.
 The program should print the corresponding BINARY representation of the input.
For example:
- '4' --> "0100".
- '7' --> "0111".
- 'A' --> "1010".
The input values can be 0,1,2,3,...,A,B,C,D,E,F.*/
#include <stdio.h>
#include <stdlib.h>
int main(){ 
    char myChar1;
    int numericValue=0;
    printf("Enter single Character: ");
    scanf("%c", &myChar1);
    printf("%x\n", myChar1);// Actual number in hexa decimal 
    if(myChar1>='0' && myChar1<='9'){
        numericValue=myChar1-'0';
    }
    else if(myChar1>='A' && myChar1<='F'){
        numericValue=myChar1-'A'+10;
    }
    switch (numericValue)
    {
    case 1:
        printf("0001");
        break;
    case 2:
        printf("0010");
        break;
    case 3:
        printf("0011");
        break;
    case 4:
        printf("0100");
        break;
    case 5:
        printf("0101");
        break;
    case 6:
        printf("0110");
        break;
    case 7:
        printf("0111");
        break;
    case 8:
        printf("1000");
        break;
    case 9:
        printf("1001");
        break;
    case 10:
        printf("1010");
        break;
    case 11:
        printf("1011");
        break;
    case 12:
        printf("1100");
        break;
    case 13:
        printf("1101");
        break;
    case 14:
        printf("1110");
        break;
    case 15:
        printf("1111");
        break;
        
    
    default:
        printf("Error...");
        break;
    }
    return 0;
}

